{"version":3,"sources":["views/About.js","views/Donate.js","state/hooks.js","components/Header.js","components/NameList.js","views/Home.js","views/Submit.js","App.js","serviceWorker.js","index.js"],"names":["About","Donate","useFetch","url","localStorageKey","cache","useRef","initialState","status","error","data","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","localData","localStorage","getItem","JSON","parse","a","current","fetch","response","json","setItem","stringify","message","fetchData","Header","children","className","NameList","list","map","person","name","age","location","Home","summaryData","console","log","Submit","App","to","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"sRAQeA,EAND,WACZ,OACE,+BCIWC,EANA,WACb,OACE,+B,wCCFSC,EAAW,SAACC,EAAKC,GAC7B,IAAMC,EAAQC,iBAAO,IAEfC,EAAe,CACpBC,OAAQ,OACRC,MAAO,KACPC,KAAM,IAN0C,EASvBC,sBAAW,SAACC,EAAOC,GAC5C,OAAQA,EAAOC,MACd,IAAK,WACJ,OAAO,2BAAKP,GAAZ,IAA0BC,OAAQ,aACnC,IAAK,UACJ,OAAO,2BAAKD,GAAZ,IAA0BC,OAAQ,UAAWE,KAAMG,EAAOE,UAC3D,IAAK,cACJ,OAAO,2BAAKR,GAAZ,IAA0BC,OAAQ,QAASC,MAAOI,EAAOE,UAC1D,QACC,OAAOH,KAEPL,GApB8C,mBAS1CK,EAT0C,KASnCI,EATmC,KA2DjD,OArCAC,qBAAU,WACT,IAAIC,GAAgB,EAClB,GAAKf,GAAQC,EAAb,CAEA,IAAMe,EAAYC,aAAaC,QAAQjB,GAEvC,GAAIe,EACFH,EAAS,CAAEF,KAAM,UAAWC,QAASO,KAAKC,MAAMJ,UAEjC,uCAAG,gCAAAK,EAAA,yDAChBR,EAAS,CAAEF,KAAM,cACbT,EAAMoB,QAAQtB,GAFF,gBAGRO,EAAOL,EAAMoB,QAAQtB,GAC3Ba,EAAS,CAAEF,KAAM,UAAWC,QAASL,IAJvB,gDAOWgB,MAAMvB,GAPjB,cAONwB,EAPM,iBAQOA,EAASC,OARhB,WAQNlB,EARM,OASZL,EAAMoB,QAAQtB,GAAOO,GACjBQ,EAVQ,mDAWZF,EAAS,CAAEF,KAAM,UAAWC,QAASL,IACrCU,aAAaS,QAAQzB,EAAiBkB,KAAKQ,UAAUpB,IAZzC,sDAcRQ,EAdQ,mDAeZF,EAAS,CAAEF,KAAM,cAAeC,QAAS,KAAMgB,UAfnC,0DAAH,qDAoBfC,GAGJ,OAAO,WACNd,GAAgB,MAEf,CAACf,EAAKC,IAEFQ,GCrDOqB,EANA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,wBAAIC,UAAU,gDAAgDD,ICYnDE,EAdE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,wBAAIF,UAAU,aACXE,EAAKC,KAAI,SAAAC,GAAM,OACd,wBAAIJ,UAAU,kBACZ,0BAAMA,UAAU,iBACbI,EAAOC,KAAK,0BAAML,UAAU,oBAAhB,KAAsCI,EAAOE,IAA7C,KAAoDF,EAAOG,iBCoBrEC,EAlBF,WAAO,IAAD,EACezC,EAJlB,8DAIoC,cAA1CM,EADS,EACTA,OAAQE,EADC,EACDA,KADC,KACKD,MAC+BP,EAJnC,mCAIyD,YAAtC0C,GAFpB,EAETpC,OAFS,EAEcE,MAE/B,OADAmC,QAAQC,IAAIF,GAEV,yBAAKT,UAAU,kCACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,KAAQ,0BAAMA,UAAU,YAAhB,WAAR,oCAAkF,0BAAMA,UAAU,sBAAhB,YAAlF,IAAuI,6BAAvI,0BACA,wBAAIA,UAAU,qBAAd,gCACA,uBAAGA,UAAU,uBAAb,mQAEU,aAAX3B,GAAyB,yBAAK2B,UAAU,uBAAsB,yBAAKA,UAAU,aAClE,YAAX3B,GAAwB,kBAAC,EAAD,CAAU6B,KAAM3B,GAAQ,KACjD,4BAAQyB,UAAU,6CAAlB,eCfSY,EANA,WACb,OACE,+B,YCWW,SAASC,IACtB,OACE,kBAAC,IAAD,KACE,yBAAKb,UAAU,mCACb,4BAAQA,UAAU,QAChB,yBAAKA,UAAU,0DACb,wBAAIA,UAAU,4DACZ,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CAAMc,GAAG,IAAId,UAAU,aAAvB,SAEF,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CAAMc,GAAG,SAASd,UAAU,aAA5B,UAEF,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CAAMc,GAAG,UAAUd,UAAU,aAA7B,YAGJ,kBAAC,IAAD,CAAMc,GAAG,UAAUd,UAAU,uEAA7B,uBAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,QAIJ,4BAAQf,UAAU,qBAChB,wBAAIA,UAAU,0BACZ,4BACE,kBAAC,IAAD,CAAMc,GAAG,IAAId,UAAU,4BAAvB,qBAEF,4BACE,kBAAC,IAAD,CAAMc,GAAG,IAAId,UAAU,aAAvB,uBC7CMgB,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzD,GACLoC,QAAQpC,MAAMA,EAAMsB,c","file":"static/js/main.c2064c10.chunk.js","sourcesContent":["import React from 'react';\n\nconst About = () => {\n  return (\n    <div />\n  );\n}\n \nexport default About;","import React from 'react';\n\nconst Donate = () => {\n  return (\n    <div />\n  );\n}\n \nexport default Donate;","import { useEffect, useRef, useReducer } from 'react';\n\nexport const useFetch = (url, localStorageKey) => {\n\tconst cache = useRef({});\n\n\tconst initialState = {\n\t\tstatus: 'idle',\n\t\terror: null,\n\t\tdata: [],\n\t};\n\n\tconst [state, dispatch] = useReducer((state, action) => {\n\t\tswitch (action.type) {\n\t\t\tcase 'FETCHING':\n\t\t\t\treturn { ...initialState, status: 'fetching' };\n\t\t\tcase 'FETCHED':\n\t\t\t\treturn { ...initialState, status: 'fetched', data: action.payload };\n\t\t\tcase 'FETCH_ERROR':\n\t\t\t\treturn { ...initialState, status: 'error', error: action.payload };\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t}, initialState);\n\n\tuseEffect(() => {\n\t\tlet cancelRequest = false;\n    if (!url || !localStorageKey) return;\n    \n    const localData = localStorage.getItem(localStorageKey);\n\n    if (localData) {\n      dispatch({ type: 'FETCHED', payload: JSON.parse(localData) });\n    } else {\n      const fetchData = async () => {\n        dispatch({ type: 'FETCHING' });\n        if (cache.current[url]) {\n          const data = cache.current[url];\n          dispatch({ type: 'FETCHED', payload: data });\n        } else {\n          try {\n            const response = await fetch(url);\n            const data = await response.json();\n            cache.current[url] = data;\n            if (cancelRequest) return;\n            dispatch({ type: 'FETCHED', payload: data });\n            localStorage.setItem(localStorageKey, JSON.stringify(data));;\n          } catch (error) {\n            if (cancelRequest) return;\n            dispatch({ type: 'FETCH_ERROR', payload: error.message });\n          }\n        }\n      };\n\n      fetchData();\n    }\n\n\t\treturn function cleanup() {\n\t\t\tcancelRequest = true;\n\t\t};\n\t}, [url, localStorageKey]);\n\n\treturn state;\n};","import React from 'react';\n\nconst Header = ({ children }) => {\n  return (\n    <h1 className=\"text-2xl leading-8 font-serif font-bold mb-2\">{children}</h1>\n  );\n}\n \nexport default Header;","import React from 'react';\n\nconst NameList = ({ list }) => {\n  return (\n    <ul className=\"text-left\">\n      {list.map(person => (\n        <li className=\"nameList__item\">\n          <span className=\"pr-2 relative\">\n            {person.name}<span className=\"hidden sm:inline\">, {person.age}, {person.location}</span>\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n \nexport default NameList;","import React from 'react';\n\nimport { useFetch } from '../state/hooks';\n\nimport Header from '../components/Header';\nimport NameList from '../components/NameList';\n\nconst API_URL = 'https://a6sz7rpoic.execute-api.us-west-2.amazonaws.com/dev/';\nconst SUMMARY_API = 'https://covidtracking.com/api/us';\n\nconst Home = () => {\n  const { status, data, error } = useFetch(API_URL, 'covidNames');\n  const { status: summaryStatus, data: summaryData } = useFetch(SUMMARY_API, 'summary');\n  console.log(summaryData);\n  return (\n    <div className=\"bg-dark text-light text-center\">\n      <div className=\"home__header m-auto\">\n        <Header><span className=\"text-cta\">128,000</span> people have lost their lives to <span className=\"whitespace-no-wrap\">COVID-19</span>.<br />These are their names.</Header>\n        <h2 className=\"text-xl leading-6\">Their memories live forever.</h2>\n        <p className=\"leading-tight my-12\">COVID-19 is caused by a coronavirus called SARS-CoV-2. Older adults and people who have severe underlying medical conditions like heart or lung disease or diabetes seem to be at higher risk for developing more serious complications from COVID-19 illness.</p>\n      </div>\n      {status === 'fetching' && <div className=\"flex justify-center\"><div className=\"loading\" /></div>}\n      {status === 'fetched' && <NameList list={data || []} />}\n      <button className=\"bg-light text-dark rounded px-5 py-2 mt-8\">View More</button>\n    </div>\n  );\n}\n \nexport default Home;","import React from 'react';\n\nconst Submit = () => {\n  return (\n    <div />\n  );\n}\n \nexport default Submit;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport About from './views/About';\nimport Donate from './views/Donate';\nimport Home from './views/Home';\nimport Submit from './views/Submit';\n\nimport './tailwind.output.css';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"container m-auto text-base px-6\">\n        <header className=\"py-8\">\n          <nav className=\"flex justify-between items-center flex-col sm:flex-row\">\n            <ul className=\"flex flex-col sm:flex-row order-2 sm:order-1 text-center\">\n              <li className=\"mb-1 sm:mr-4\">\n                <Link to=\"/\" className=\"underline\">Home</Link>\n              </li>\n              <li className=\"mb-1 sm:mr-4\">\n                <Link to=\"/about\" className=\"underline\">About</Link>\n              </li>\n              <li className=\"mb-1\">\n                <Link to=\"/donate\" className=\"underline\">Donate</Link>\n              </li>\n            </ul>\n            <Link to=\"/submit\" className=\"bg-cta px-4 py-2 rounded text-light order-1 sm:order-2 mb-5 sm:mb-0\">Honor a Loved One</Link>\n          </nav>\n        </header>\n\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/donate\">\n            <Donate />\n          </Route>\n          <Route path=\"/submit\">\n            <Submit />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n        <footer className=\"my-12 text-center\">\n          <ul className=\"inline-flex opacity-75\">\n            <li>\n              <Link to=\"#\" className=\"termsLink underline mr-2\">Terms of Service</Link>\n            </li>\n            <li>\n              <Link to=\"#\" className=\"underline\">Privacy Policy</Link>\n            </li>\n          </ul>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}