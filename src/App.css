:root {
  --timeout: 500ms;
  --list-item-max-height: 30px;
  --color-primary: #ff3838;
  --color-background: #0A0A0A;
  --color-text: #fff;
  --color-cta: #ff3838;
}

.home__header {
  min-height: 140px;
  max-width: 690px;
}
.nameList__item {
  display: inline;
}
.nameList__item,
.nameList__item button,
.nameList__item span {
  word-wrap: break-word;
}
.nameList__item > span:after {
  content: '/';
  display: inline-block;
  position: relative;
  padding-left: .5rem;
}
.termsLink:after {
  content: '|';
  display: inline-block;
  position: relative;
  padding-left: .5rem;
}
.loading {
	width: 20px;
	height: 20px;
	/* border-radius: 50%;
	display: inline-block;
	background: #222;
	position: relative; */
}

.dots {
  color: white;
  min-height: 50px;
}
.dot1 {
  animation: visibility 2s linear infinite;
 }
 
 @keyframes visibility {
  0% {
  opacity: 1;
  }
  65% {
  opacity: 1;
  }
  66% {
  opacity: 0;
  }
  100% {
  opacity: 0;
  }
 }
 
 .dot2 {
  animation: visibility2 2s linear infinite;
 }
 
 @keyframes visibility2 {
  0% {
   opacity: 0;
  }
  21% {
   opacity: 0;
  }
  22% {
   opacity: 1;
  }
  65% {
   opacity: 1;
  }
  66% {
   opacity: 0;
  }
  100% {
   opacity: 0;
  }
 }
 
 .dot3 {
  animation: visibility3 2s linear infinite;
 }
 
 @keyframes visibility3 {
  0% {
   opacity: 0;
  }
  43% {
   opacity: 0;
  }
  44% {
   opacity: 1;
  }
  65% {
   opacity: 1;
  }
  66% {
   opacity: 0;
  }
  100% {
   opacity: 0;
  }
 }

.honorForm {
  max-width: 350px;
}

.field {
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
}

label, input {
  transition: all 0.2s;
  touch-action: manipulation;
}

input {
  font-size: 1.5em;
  border: 0;
  /* border-bottom: 1px solid #ccc; */
  font-family: inherit;
  -webkit-appearance: none;
  border-radius: 0;
  padding: 0;
  cursor: text;
}

input:focus {
  outline: 0;
  /* border-bottom: 1px solid #666; */
}

label {
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}

/**
* By default, the placeholder should be transparent. Also, it should 
* inherit the transition.
*/
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
* Show the placeholder when the input is focused.
*/
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when 
* there's something in the input at all.
*/
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}

.fade-enter {
  max-height: 0;
  opacity: 0;
}

.fade-enter-active {
  max-height: var(--list-item-max-height);
  opacity: 1;
  transition: all var(--timeout);
  transition: all 300ms;
}

.fade-exit {
  max-height: var(--list-item-max-height);
  opacity: 1;
}

.fade-exit-active {
  max-height: 0;
  opacity: 0;
  transition: all var(--timeout);
  transition: all 300ms;
}

.submit-enter {
  opacity: 0;
}

.submit-enter-active {
  opacity: 1;
  transition: opacity var(--timeout);
}

.submit-exit {
  opacity: 1;
}

.submit-exit-active {
  opacity: 0;
  transition: opacity 0;
}

.__react_component_tooltip {
  font-size: 16px;
  opacity: 1 !important;
  max-width: 90vw;
  width: 500px;
}

@media only screen and (max-width: 600px) {
  .__react_component_tooltip.show {
    left: 20px !important;
    top: auto !important;
    position: fixed;
    bottom: 20px;
  }
}

.bg-cta.text-light {
  border: 1px solid #000;
  text-shadow: 1px 1px 1px #000;
}

button,
a {
  transition: all 300ms ease;
}

a.bg-cta:active,
a.bg-cta:hover,
a.bg-cta:focus {
  text-shadow: 1px 3px 3px #000;
  border: 1px solid #fff;
}